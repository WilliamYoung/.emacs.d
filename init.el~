(server-start)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(inhibit-startup-screen t))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
(add-to-list 'custom-theme-load-path
              "~/.emacs.d/emacs-color-theme/")
(load-theme 'solarized-light t)

(global-linum-mode t)

(add-to-list 'load-path 
				"~/.emacs.d/")

; ;; Interactively Do Things (highly recommended, but not strictly required)
; (require 'ido)
; (ido-mode t)
   
; ;; Rinari
; (add-to-list 'load-path 
; 				"~/.emacs.d/rinari")
; (require 'rinari)


(dolist (command '(yank yank-pop))
   (eval `(defadvice ,command (after indent-region activate)
            (and (not current-prefix-arg)
                 (member major-mode '(emacs-lisp-mode lisp-mode
                                                      clojure-mode    scheme-mode
                                                      haskell-mode    ruby-mode
                                                      rspec-mode      python-mode
                                                      c-mode          c++-mode
                                                      objc-mode       latex-mode
                                                      plain-tex-mode))
                 (let ((mark-even-if-inactive transient-mark-mode))
                   (indent-region (region-beginning) (region-end) nil))))))

(add-to-list 'load-path 
				"~/.emacs.d/")

(require 'tabbar)

; (require 'ido)
; (ido-mode t)
; (setq ido-auto-merge-work-directories-length -1) 

; (require 'ide-skel)
(require 'multiple-line-edit)

(require 'dirtree)
(defun ep-dirtree ()
  (interactive)
  (dirtree-in-buffer eproject-root t))


(add-to-list 'load-path
              "~/.emacs.d/yasnippet")
(require 'yasnippet)
(yas-global-mode 1)


(require 'package)
(add-to-list 'package-archives 
    '("marmalade" .
      "http://marmalade-repo.org/packages/"))
(package-initialize)


(require 'simp)
(simp-project-define
  '(:type ruby
    :has (*.rb)
    :ignore (.git)))
(global-set-key [(control p)] 'simp-project-find-file)